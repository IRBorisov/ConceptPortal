export function HelpRSLangExpressionRecursive() {
  return (
    <div>
      <h1>Циклические конструкции</h1>
      <p>Циклическая (рекурсивная) конструкция является теоретико-множественным выражением.</p>

      <h2>Синтаксис</h2>
      <ul>
        <li>
          <code>{'R{ξ ≔ ТМВ1 | ТМВ2(ξ)}'}</code>
        </li>
        <li>
          <code>{'R{ξ ≔ ТМВ1 | ЛВ(ξ) | ТМВ2(ξ)}'}</code>
        </li>
        <li>
          <code>{'R{(ξ,σ) ≔ (ТМВ1,ТМВ2) | ЛВ(ξ,σ) | ТМВ3(ξ,σ)}'}</code>
        </li>
        <li>
          Буква <code>R</code> — часть синтаксиса, а не идентификатор.
        </li>
      </ul>

      <h2>Состав конструкции</h2>
      <ul>
        <li>
          <b>База рекурсии</b> — в первом блоке оператором присваивания <code>≔</code> задаётся начальное значение
          переменной (или кортежа переменных) рекурсии.
        </li>
        <li>
          <b>Условие продолжения</b> — во втором блоке указывается логическое выражение <code>ЛВ</code>, которое
          пересчитывается на каждом шаге для текущего значения переменной рекурсии. Второй блок опционален, условием
          выхода по умолчанию считается повторение предыдущего значения на текущем шаге.
        </li>
        <li>
          <b>Пересчёт</b> — в третьем блоке задаётся ТМВ, вычисляемое на текущем значении переменной и дающее значение
          переменной на следующем шаге.
        </li>
      </ul>

      <h2>Порядок выполнения шага</h2>
      <p>На каждом шаге сначала вычисляется условие продолжения рекурсии, затем выполняется пересчёт.</p>

      <h2>Завершение и результат</h2>
      <p>
        Рекурсия продолжается, пока условие продолжения истинно, или до стабилизации значения переменной рекурсии
        (значение на шаге <i>k</i> равно значению на шаге <i>k+1</i>). Результатом является последнее значение
        переменной (или кортежа переменных) рекурсии.
      </p>

      <h2>Пример</h2>
      <p>
        Вычисление степеней двойки:
        <br />
        <code>{'R{(ξ,σ) ≔ (1, 0) | σ<5 | (2∗ξ, σ+1)} = 32'}</code>
      </p>
    </div>
  );
}
